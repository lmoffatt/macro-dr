data = DataFrame_real (filename = "/home/lmoffatt/Code/macro-dr/Data/Moffatt_Hume_2007_itrace.txt")

Model_1 = State_Model ( number_of_states = 5  transition_rates = { { { 1 0 } "koff" }  { 2 1 } "2*koff" } { 3 2 } "3*koff" }  { { 3 4 } "beta" }  { { 4 3 } "alfa" } }  agonist_transitions_rates = { { {  0  1 } "3*kon" } { {  0  1 } "2*kon" } { {  0  1 } "kon" } }   conductances = { { 4  "g"} } )

param_1_MH = State_Model_Parameters ( values = { { "kon"  6.09 }  { "koff"   212 }  { "beta"  1681 }  { "alfa"  54 } { "g"  16.59e-3 } {"Number_of_Channels"  100}  { "gaussian_noise"  1.0e-5 } } )


paramPrior_1 = State_Model_Parameters_Distribution ( values = { {   "kon"  Logarithm_Transformation()  Normal_Distribution ( mean = 1  variance =  2 )  }    {   "koff"  Logarithm_Transformation()  Normal_Distribution ( mean = 2  variance =  3 )  }  {   "beta"  Logarithm_Transformation()  Normal_Distribution ( mean = 2  variance =  2 )  }    {   "alfa"  Logarithm_Transformation()  Normal_Distribution ( mean = 2  variance =  2 )  } { "g"  Logarithm_Transformation ()  Normal_Distribution ( mean = -2  variance =  1 ) }  {"Number_of_Channels"   Logarithm_Transformation ()  Normal_Distribution ( mean = 2  variance =  2 ) }  { "gaussian_noise"   Logarithm_Transformation ()  Normal_Distribution ( mean = -3  variance =  1 ) } }   )

experiment = to_experiment (data_frame = data  colname_time = "t"  colname_nsample = "ns"  colname_x = "xATP"  colname_y = "yCurrent" holding_potential = -60.0 frequency_of_sampling = 50E3)


mySimulation = simulate (initseed = 3034446629  singleLigandExperiment = experiment  State_Model = Model_1   model_parameters = param_1_MH   number_of_sub_intervals = 100 min_probability = 1e-9 tolerance_error=1e-4 max_dt = 1e-4 )

d = to_dataframe ( experiment = mySimulation colname_trace = "trace"   colname_time = "t"  colname_nsample = "ns"  colname_x = "xATP"  colname_y = "yCurrent")

result = write (variable = d  filename = "Model_1_Sim.txt" )


logLik = likelihood ( singleLigandExperiment = mySimulation  State_Model = Model_1   model_parameters = param_1_MH   algorithm = "MacroDMR" min_probability = 1e-9 tolerance_error=1e-5)


