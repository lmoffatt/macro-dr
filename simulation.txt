// defines an allosteric model   loads an experiment and simulate the model on the experiment



data = DataFrame_real (filename = "/home/lmoffatt/Code/macro-dr/Data/Moffatt_Hume_2007_3.txt")


binding = Conformational_change (change_in_agonist = 1   change_in_conductance = 0   label = "L"   par_on = "kon"   par_off = "koff")
rocking = Conformational_change (change_in_agonist = 0   change_in_conductance = 1   label = "R"   par_on = "beta"   par_off = "alpha")

RL = Conformational_interaction (interacting_conformational_changes =   { "R"  "L" }factor_label = "RL"   coefficient_labels =   { "RL_R"  "RL_L" })
LR = Conformational_interaction (interacting_conformational_changes =   { "L"  "R" }factor_label = "LR"   coefficient_labels =   { "LR_L"  "LR_R" })
RR = Conformational_interaction (interacting_conformational_changes =   { "R"  "R" }factor_label = "RR"   coefficient_labels =   { "RR_1"  "RR_2" })
RLR = Conformational_interaction (interacting_conformational_changes =   { "R"  "L"  "R" }factor_label = "RLR"   coefficient_labels =   { "RLR_1"  "RLR_3"  "RLR_L" })
RRR = Conformational_interaction (interacting_conformational_changes =   { "R"  "L"  "R" }factor_label = "RRR"   coefficient_labels =   { "RRR_R"  "RRR_R"   "RRR_R" })

Model_1 = Allosteric_Model (number_of_units = 3   conformational_changes =     { { "L"   binding }{ "R"   rocking }} unit_of_conformational_changes =   { "R"  "L" } conformational_interactions =   { RL  LR  RR  RLR  RRR } conductance_names =     { { 0  "g_0" }{ 1  "g_1" }{ 2  "g_2" }{ 3   "g_3" }})


experiment = to_experiment (data_frame = data  colname_time = "t"  colname_nsample = "ns"  colname_x = "xATP"  colname_y = "yCurrent" holding_potential = -60.0 frequency_of_sampling = 50E3)

paramInit = Allosteric_Model_Parameters (values = { { "LR"  200 }	    { "LR_L"  0.1 }	  { "LR_R"  0.9 }	  { "RL"  200 }	  { "RLR"  1000 }	  { "RLR_1"  0.9 }	  { "RLR_3"  0.9 }	  { "RLR_L"  0.1 }	  { "RL_L"  0.1 }	  { "RL_R"  0.9 }	  { "RR"  1000 }	  { "RRR"  1000 }	  { "RRR_R"  0.5 }	  { "RR_1"  0.5 }	  { "RR_2"  0.5 }	  { "alpha"  1e6 }	  { "beta"  10 }	  { "g_0"  1e-5 } { "g_1" 1e-4 }	  { "g_2"  1e-3 }	    { "g_3"  16.59e-3 }	  { "koff"  1e7 }	  { "kon"  20000 }   {"Number_of_Channels"  100}  {"gaussian_noise"  1.0e-3 }})

paramPrior = Allosteric_Model_Parameters_Distribution ( values = { {   "LR"  Logarithm_Transformation()  Normal_Distribution ( mean = 2.301  variance =  1e-1 )  }	    { "LR_L"  Logit_Transformation ()  Normal_Distribution ( mean = -0.954  variance =  1e-1) }	  { "LR_R"  Logit_Transformation ()  Normal_Distribution ( mean = 0.954  variance =  1e-1 ) }	  { "RL"   Logarithm_Transformation ()  Normal_Distribution ( mean = 2.301  variance =  1e-1 ) }	  { "RLR"   Logarithm_Transformation ()  Normal_Distribution ( mean = 3  variance =  1e-1) }	  { "RLR_1"   Logit_Transformation ()  Normal_Distribution ( mean = 0.954  variance =  1e-1) }	  { "RLR_3"   Logit_Transformation ()  Normal_Distribution ( mean = 0.954  variance =  1e-1) }	  { "RLR_L"   Logit_Transformation ()  Normal_Distribution ( mean = -0.954  variance =  1e-1) }	  { "RL_L"   Logit_Transformation ()  Normal_Distribution ( mean = -0.954  variance =  1e-1) }	  { "RL_R"   Logit_Transformation ()  Normal_Distribution ( mean = 0.954  variance =  1e-1) }	  { "RR"   Logarithm_Transformation ()  Normal_Distribution ( mean = 3 variance =  1e-1) }	  { "RRR"   Logarithm_Transformation ()  Normal_Distribution ( mean = 3  variance =  1e-1) }	  { "RRR_R"  Logit_Transformation ()  Normal_Distribution ( mean = 0  variance =  1e-1) }	  { "RR_1"  Logit_Transformation ()  Normal_Distribution ( mean = 0  variance =  1e-1) }	  { "RR_2"  Logit_Transformation ()  Normal_Distribution ( mean = 0  variance =  1e-1) }	  { "alpha"   Logarithm_Transformation ()  Normal_Distribution ( mean = 6  variance =  1e-1 ) }	  { "beta"   Logarithm_Transformation ()  Normal_Distribution ( mean = 1  variance =  1e-1) }	  { "g_0"  Logarithm_Transformation ()  Normal_Distribution ( mean = -5  variance =  1e-1) } { "g_1"  Logarithm_Transformation ()  Normal_Distribution ( mean = -4  variance =  1e-1) } { "g_2" Logarithm_Transformation ()  Normal_Distribution ( mean = -3  variance =  1e-1) }	    { "g_3"  Logarithm_Transformation ()  Normal_Distribution ( mean = -1.78  variance =  1e-1) }	  { "koff"   Logarithm_Transformation ()  Normal_Distribution ( mean = 7  variance =  1e-1 ) }	  { "kon"   Logarithm_Transformation ()  Normal_Distribution ( mean = 4.301  variance =  1e-1 ) }   {"Number_of_Channels"   Logarithm_Transformation ()  Normal_Distribution ( mean = 2  variance =  1e-1 ) }  { "gaussian_noise"   Logarithm_Transformation ()  Normal_Distribution ( mean = -3  variance =  1e-1 ) } } )

paramPrior_red = Allosteric_Model_Parameters_Distribution ( values = { {   "LR"  Logarithm_Transformation()  Normal_Distribution ( mean = 2.301  variance =  1e-1 )  }	   { "RR"   Logarithm_Transformation ()  Normal_Distribution ( mean = 3 variance =  1e-1) }	  { "RRR"   Logarithm_Transformation ()  Normal_Distribution ( mean = 3  variance =  1e-1) }	  { "RRR_R"  Logit_Transformation ()  Normal_Distribution ( mean = 0  variance =  1e-1) }	  { "RR_1"  Logit_Transformation ()  Normal_Distribution ( mean = 0  variance =  1e-1) }	  { "RR_2"  Logit_Transformation ()  Normal_Distribution ( mean = 0  variance =  1e-1) }	  { "alpha"   Logarithm_Transformation ()  Normal_Distribution ( mean = 6  variance =  1e-1 ) }	  { "beta"   Logarithm_Transformation ()  Normal_Distribution ( mean = 1  variance =  1e-1) } { "g_2" Logarithm_Transformation ()  Normal_Distribution ( mean = -3  variance =  1e-1) }	    { "g_3"  Logarithm_Transformation ()  Normal_Distribution ( mean = -1.78  variance =  1e-1) }	  { "koff"   Logarithm_Transformation ()  Normal_Distribution ( mean = 7  variance =  1e-1 ) }	  { "kon"   Logarithm_Transformation ()  Normal_Distribution ( mean = 4.301  variance =  1e-1 ) }     { "gaussian_noise"   Logarithm_Transformation ()  Normal_Distribution ( mean = -3  variance =  1e-1 ) } } )

paramPrior_6 = Allosteric_Model_Parameters_Distribution ( values = { {   "LR"  Logarithm_Transformation()  Normal_Distribution ( mean = 2.301  variance =  1e-4 )  }	    { "LR_L"  Logit_Transformation ()  Normal_Distribution ( mean = -0.954  variance =  1e-4) }	  { "LR_R"  Logit_Transformation ()  Normal_Distribution ( mean = 0.954  variance =  1e-4 ) }	  { "RL"   Logarithm_Transformation ()  Normal_Distribution ( mean = 2.301  variance =  1e-4 ) }	  { "RLR"   Logarithm_Transformation ()  Normal_Distribution ( mean = 3  variance =  1e-4) }	  { "RLR_1"   Logit_Transformation ()  Normal_Distribution ( mean = 0.954  variance =  1e-4) }	  { "RLR_3"   Logit_Transformation ()  Normal_Distribution ( mean = 0.954  variance =  1e-4) }	  { "RLR_L"   Logit_Transformation ()  Normal_Distribution ( mean = -0.954  variance =  1e-4) }	  { "RL_L"   Logit_Transformation ()  Normal_Distribution ( mean = -0.954  variance =  1e-4) }	  { "RL_R"   Logit_Transformation ()  Normal_Distribution ( mean = 0.954  variance =  1e-4) }	  { "RR"   Logarithm_Transformation ()  Normal_Distribution ( mean = 3 variance =  1e-4) }	  { "RRR"   Logarithm_Transformation ()  Normal_Distribution ( mean = 3  variance =  1e-4) }	  { "RRR_R"  Logit_Transformation ()  Normal_Distribution ( mean = 0  variance =  1e-4) }	  { "RR_1"  Logit_Transformation ()  Normal_Distribution ( mean = 0  variance =  1e-4) }	  { "RR_2"  Logit_Transformation ()  Normal_Distribution ( mean = 0  variance =  1e-4) }	  { "alpha"   Logarithm_Transformation ()  Normal_Distribution ( mean = 6  variance =  1e-4 ) }	  { "beta"   Logarithm_Transformation ()  Normal_Distribution ( mean = 1  variance =  1e-4) } { "g_2" Logarithm_Transformation ()  Normal_Distribution ( mean = -3  variance =  1e-4) }	    { "g_3"  Logarithm_Transformation ()  Normal_Distribution ( mean = -1.78  variance =  1e-4) }	  { "koff"   Logarithm_Transformation ()  Normal_Distribution ( mean = 7  variance =  1e-4 ) }	  { "kon"   Logarithm_Transformation ()  Normal_Distribution ( mean = 4.301  variance =  1e-4 ) }     { "gaussian_noise"   Logarithm_Transformation ()  Normal_Distribution ( mean = -3  variance =  1e-4 ) } } )


parial_param = Allosteric_Model_Parameters_partial_Distribution ( variable_parameters = paramPrior_red  fixed_parameters = paramInit )


r =write( variable = paramPrior  filename = "myPrior.txt")

mySimulation = simulate (initseed = 0  singleLigandExperiment = experiment  Allosteric_Model = Model_1   model_parameters = paramInit   number_of_sub_intervals = 100 min_probability = 1e-9 tolerance_error=1e-4)

de = to_dataframe ( experiment = experiment colname_trace = "trace"  colname_time = "t"  colname_nsample = "ns"  colname_x = "xATP"  colname_y = "yCurrent")


d = to_dataframe ( experiment = mySimulation colname_trace = "trace"   colname_time = "t"  colname_nsample = "ns"  colname_x = "xATP"  colname_y = "yCurrent")

result = write (variable = d  filename = "mySimulation.txt" )

result = write (variable = de  filename = "myExperiment.txt" )


logLik = likelihood ( singleLigandExperiment = mySimulation  Allosteric_Model = Model_1   model_parameters = paramInit   algorithm = "MacroDVR" min_probability = 1e-9 tolerance_error=1e-5)

logLik_det = likelihood_detail ( singleLigandExperiment = mySimulation  Allosteric_Model = Model_1   model_parameters = paramInit   algorithm = "MacroDVR" min_probability = 1e-9 tolerance_error=1e-3)

dd = to_dataframe ( experiment = logLik_det colname_time = "t"  colname_nsample = "ns"  colname_y = "yCurrent")

result2 = write (variable = dd  filename = "mylogSimulation.txt" )

liktest = likelihoodtest ( singleLigandExperiment = mySimulation  Allosteric_Model = Model_1 model_parameters = paramInit  model_parameters_distribution = paramPrior   algorithm = "MacroDVR"  min_probability = 1e-14 tolerance_error=1e-2 eps_G = 1e-6  number_of_sub_intervals = 100 initseed = 0   nsamples = 64  p_value = 0.05)

dlik = to_dataframe ( analysis = liktest )

re = write (variable = dlik filename ="mySamples.txt" )


//evidence_works = evidence ( singleLigandExperiment = mySimulation  Allosteric_Model = Model_1   model_parameters_distribution = paramPrior   algorithm = "MacroDVR"  p_jump = 0.5  eps_G = 1e-4 min_probability = 1e-14 tolerance_error=1e-2 initseed = 0   betas = { 1.0 0.5 0.3 0.1 1e-2 1e-3 1e-4 0}  landas = {0 1 2 5 10 20 50 100 200 500 1000 2000 5000 1e4 2e4 5e4 1e5 2e5 5e5 1e6 2e6 5e6 1e7} landa_50_hill = {{ 1 2 5 10 20 50 100 200 500 1000 2000 5000 1e4 2e4 5e4 1e5 2e5 5e5 1e6 2e6 5e6 } { 0.2 0.5 0.8 1.0 1.2 1.5 1.8 2.0 2.5 3.0}} gain_moment = 2 nSamples = 1000  parameters_output = 0  gradient_output = 0)
