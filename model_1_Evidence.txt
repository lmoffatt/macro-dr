data = DataFrame_real (filename = "/home/lmoffatt/Code/macro-dr/Data/Moffatt_Hume_2007_3.txt")

Model_1 = State_Model ( number_of_states = 5  transition_rates = { { { 1 0 } "koff" } { { 2 1 } "2*koff" }  {{ 3 2 } "3*koff" }  { { 3 4 } "beta" }  { { 4 3 } "alfa" } }  agonist_transitions_rates = { { {  0  1 } "3*kon" } { {  1  2 } "2*kon" } { {  2  3 } "kon" } }   conductances = { { 4  "g"} } )

param_1_MH = State_Model_Parameters ( values = { { "kon"  609 }  { "koff"   212 }  { "beta"  1681 }  { "alfa"  54 } { "g"  16.59e-3 } {"Number_of_Channels"  4}  { "gaussian_noise"  1.0e-5 } } )

paramPrior_1 = State_Model_Parameters_Distribution ( values = { {   "kon"  Logarithm_Transformation()  Normal_Distribution ( mean = 2  variance =  2 ) Range ( min = -6 max = 8 )  }    {   "koff"  Logarithm_Transformation()  Normal_Distribution ( mean = 2  variance =  3 )  Range ( min = -6 max = 8 ) }  {   "beta"  Logarithm_Transformation()  Normal_Distribution ( mean = 2  variance =  2 ) Range ( min = -6 max = 8 ) }    {   "alfa"  Logarithm_Transformation()  Normal_Distribution ( mean = 2  variance =  2 ) Range ( min = -6 max = 8 ) } { "g"  Logarithm_Transformation ()  Normal_Distribution ( mean = -2  variance =  1 ) Range ( min = -6 max = 2 ) }  {"Number_of_Channels"   Logarithm_Transformation ()  Normal_Distribution ( mean = 1  variance =  2 ) Range ( min = -2 max = 8 ) }  { "gaussian_noise"   Logarithm_Transformation ()  Normal_Distribution ( mean = -3  variance =  1 ) Range ( min = -8 max = 0 ) } }   )


Model_1_new = State_Model_new ( number_of_states = 5  transition_rates = { { { 1 0 } "koff" } { { 2 1 } "2*koff" }  {{ 3 2 } "3*koff" }  { { 3 4 } "beta" }  { { 4 3 } "alfa" } }  agonist_transitions_rates = { { {  0  1 } "3*kon" } { {  1  2 } "2*kon" } { {  2  3 } "kon" } }   conductances = { { 4  "g"} } )

param_1_MH_new = State_Model_new_Parameters_new ( values = { { "kon"  609 }  { "koff"   212 }  { "beta"  1681 }  { "alfa"  54 } { "g"  16.59e-3 } {"Number_of_Channels"  4}  { "gaussian_noise"  1.0e-5 } } )

paramPrior_1_new = State_Model_new_Parameters_Distribution_new ( values = { {   "kon"  Logarithm_Transformation()  Normal_Distribution ( mean = 2  variance =  2 ) Range ( min = -6 max = 8 )  }    {   "koff"  Logarithm_Transformation()  Normal_Distribution ( mean = 2  variance =  3 )  Range ( min = -6 max = 8 ) }  {   "beta"  Logarithm_Transformation()  Normal_Distribution ( mean = 2  variance =  2 ) Range ( min = -6 max = 8 ) }    {   "alfa"  Logarithm_Transformation()  Normal_Distribution ( mean = 2  variance =  2 ) Range ( min = -6 max = 8 ) } { "g"  Logarithm_Transformation ()  Normal_Distribution ( mean = -2  variance =  1 ) Range ( min = -6 max = 2 ) }  {"Number_of_Channels"   Logarithm_Transformation ()  Normal_Distribution ( mean = 1  variance =  2 ) Range ( min = -2 max = 8 ) }  { "gaussian_noise"   Logarithm_Transformation ()  Normal_Distribution ( mean = -3  variance =  1 ) Range ( min = -8 max = 0 ) } }   )




Model_0 = State_Model ( number_of_states = 3  transition_rates = { { { 1 0 } "koff" }  { { 1 2 } "beta" }  { { 2 1 } "alfa" } }  agonist_transitions_rates = { { {  0  1 } "kon" }  }   conductances = { { 2  "g"} } )

param_0_MH = State_Model_Parameters ( values = { { "kon"  609 }  { "koff"   212 }  { "beta"  1681 }  { "alfa"  54 } { "g"  16.59e-3 } {"Number_of_Channels"  12 }  { "gaussian_noise"  1.0e-5 } } )

paramPrior_0 = State_Model_Parameters_Distribution ( values = { {   "kon"  Logarithm_Transformation()  Normal_Distribution ( mean = 2  variance =  2 ) Range ( min = -6 max = 8 )  }    {   "koff"  Logarithm_Transformation()  Normal_Distribution ( mean = 2  variance =  3 )  Range ( min = -6 max = 8 ) }  {   "beta"  Logarithm_Transformation()  Normal_Distribution ( mean = 2  variance =  2 ) Range ( min = -6 max = 8 ) }    {   "alfa"  Logarithm_Transformation()  Normal_Distribution ( mean = 2  variance =  2 ) Range ( min = -6 max = 8 ) } { "g"  Logarithm_Transformation ()  Normal_Distribution ( mean = -2  variance =  1 ) Range ( min = -6 max = 2 ) }  {"Number_of_Channels"   Logarithm_Transformation ()  Normal_Distribution ( mean = 1  variance =  2 ) Range ( min = -2 max = 8 ) }  { "gaussian_noise"   Logarithm_Transformation ()  Normal_Distribution ( mean = -3  variance =  1 ) Range ( min = -8 max = 0 ) } }   )




experiment = to_experiment (data_frame = data  colname_time = "t"  colname_nsample = "ns"  colname_x = "xATP"  colname_y = "yCurrent" holding_potential = -60.0 frequency_of_sampling = 50E3)


mySimulation_1 = simulate (initseed = 3034446629  singleLigandExperiment = experiment  State_Model = Model_1   model_parameters = param_1_MH   number_of_sub_intervals = 100 min_probability = 1e-7 tolerance_error=1e-4 max_dt = 1e-4 )

mySimulation_0 = simulate (initseed = 3034446629  singleLigandExperiment = experiment  State_Model = Model_0   model_parameters = param_0_MH   number_of_sub_intervals = 100 min_probability = 1e-7 tolerance_error=1e-4 max_dt = 1e-4 min_connection_ratio = 0.01)

d = to_dataframe ( experiment	 = mySimulation_1 )

result = write (variable = d  filename = "Model_1_Sim.txt" )

d0 = to_dataframe ( experiment	 = mySimulation_0 )

result = write (variable = d0  filename = "Model_0_Sim.txt" )


logLik = likelihood ( singleLigandExperiment = mySimulation_1  State_Model = Model_1   model_parameters = param_1_MH   algorithm = "MacroDMR" min_probability = 1e-7 tolerance_error=1e-5  Binomial_threshold = 5  Variance_threshold = 1 )

logLik = likelihood_derivative ( singleLigandExperiment = mySimulation_1  State_Model_new = Model_1_new   model_parameters = param_1_MH_new   model_parameters_distribution = paramPrior_1_new algorithm = "MacroSDMR" min_probability = 1e-7 tolerance_error=1e-5  Binomial_threshold = 5  Variance_threshold = 1 )


logLik = likelihood ( singleLigandExperiment = mySimulation_1  State_Model = Model_1   model_parameters = param_1_MH   algorithm = "MacroSDMR" min_probability = 1e-7 tolerance_error=1e-5  Binomial_threshold = 5  Variance_threshold = 1 )



logLik_det = likelihood_detail ( singleLigandExperiment = mySimulation_1  State_Model = Model_1   model_parameters = param_1_MH   algorithm = "MacroDMR" min_probability = 1e-6 tolerance_error=1e-3 Binomial_threshold =0 Variance_threshold =1.0)

logLik_detS = likelihood_detail ( singleLigandExperiment = mySimulation_1  State_Model = Model_1   model_parameters = param_1_MH   algorithm = "MacroSDMR" min_probability = 1e-6 tolerance_error=1e-3 Binomial_threshold =0 Variance_threshold =1.0)


dd = to_dataframe ( experiment = logLik_det)


result2 = write (variable = dd  filename = "new_mylogSimulationMacroDMR.txt" )

ddS = to_dataframe ( experiment = logLik_detS)


result2S = write (variable = ddS  filename = "new_mylogSimulationMacroSDMR.txt" )


//logLik = likelihood ( singleLigandExperiment = mySimulation_1  State_Model = Model_1   model_parameters = param_1_MH   algorithm = "MicroDVR" min_probability = 1e-7 tolerance_error=1e-5  Binomial_threshold = 0  Variance_threshold = 1 )

logLik = likelihood ( singleLigandExperiment = mySimulation_1  State_Model = Model_1   model_parameters = param_1_MH   algorithm = "RMicroDVR_new" min_probability = 1e-7 tolerance_error=1e-5  Binomial_threshold = 0  Variance_threshold = 1 max_Chi2 = 100 reduce_by_p = 1e-8 min_connection_ratio = 0.05 )

logLik = likelihood ( singleLigandExperiment = mySimulation_1  State_Model = Model_1   model_parameters = param_1_MH   algorithm = "RMicroDVR" min_probability = 1e-7 tolerance_error=1e-5  Binomial_threshold = 0  Variance_threshold = 1 max_Chi2 = 100 reduce_by_p = 1e-4 min_connection_ratio = 0.05 )



logLik_det = likelihood_detail ( singleLigandExperiment = mySimulation_1  State_Model = Model_1   model_parameters = param_1_MH   algorithm = "MacroDMR" min_probability = 1e-6 tolerance_error=1e-3 Binomial_threshold =0 Variance_threshold =1.0)



dd = to_dataframe ( experiment = logLik_det)


result2 = write (variable = dd  filename = "new_mylogSimulation.txt" )

logLik_det_mi = likelihood_detail ( singleLigandExperiment = mySimulation_1  State_Model = Model_1   model_parameters = param_1_MH   algorithm = "RMicroDVR" min_probability = 1e-7 tolerance_error=1e-5 Binomial_threshold =5.0 Variance_threshold =1.0 max_Chi2 = 50 reduce_by_p = 1e-6 min_connection_ratio = 0.1 )



dd_mi = to_dataframe ( experiment = logLik_det_mi)


result2 = write (variable = dd_mi  filename = "RMicroDVR__mylogSimulation.txt" )

//evidence_works = evidence_derivative_prob (id_file="m1_evidence_der_prob_02_DMR_" singleLigandExperiment = mySimulation  State_Model = Model_1   model_parameters_distribution = paramPrior_1   algorithm = "MacroDMR"  Binomial_threshold =5.0 Variance_threshold =1.0  n_trials=100 p_jump = 0.5  min_probability = 1e-14 tolerance_error=1e-2 initseed = 3034446629   betas = { 1.0 0.3 0.1 3e-2 1e-2 3e-3 0}  landas = {0 1 2 5 10 20 50 100 200 500 1000 2000 5000 1e4 2e4 5e4 } target_probability = 0.2 nSamples = 10000  state_sampling_cycles = { { 1  3  }  { 10  4 } } gen_sampling_cycles = { { 10  4  }  } ana_sampling_cycles = { { 50  3  }  {200  4 }  { 500  5 } { 1000 6} } )


//evidence_works = evidence_emcee (id_file= "emcee" singleLigandExperiment = mySimulation  State_Model = Model_1   model_parameters_distribution = paramPrior_1   algorithm = "MacroDMR"  Binomial_threshold =5.0 Variance_threshold =1.0  p_jump = 0.5   min_probability = 1e-14 tolerance_error=1e-2 initseed = 3034446629   betas = { 1.0 0.3 0.1 3e-2 1e-2 3e-3 0}  alfas = {2 1.5 1.2 1.1 1.05 1.02 1.01 1.005  1.002  1.001 1.0005  1.0002 1.0001 }  nSamples = 10000  numWalkers = 8  target_prob = 0.2  n_trials_at_init = 100     state_sampling_cycles = { { 1  3  }  { 10  4 } } gen_sampling_cycles = { { 10  4  }  } ana_sampling_cycles = { { 50  3  }  {200  4 }  { 500  5 } { 1000 7} } )

//evidence_works = evidence (id_file="evidence" singleLigandExperiment = mySimulation  State_Model = Model_1   model_parameters_distribution = paramPrior_1   algorithm = "MacroDMR"  Binomial_threshold =5.0 Variance_threshold =1.0  p_jump = 0.5  min_probability = 1e-14  tolerance_error=1e-2 initseed = 3034446629 eps_G = 1e-4 eps_factor =10  betas = { 1.0 0.3 0.1 3e-2 1e-2 3e-3 0}  landas = {0 1 2 5 10 20 50 100 200 500 1000 2000 5000 1e4 2e4 5e4 1e5 2e5 5e5 1e6 2e6 5e6 1e7} landa_50_hill = {{ 1 2 5 10 20 50 100 200 500 1000 2000 5000 1e4 2e4 5e4 1e5 2e5 5e5 1e6 2e6 5e6 } { 0.2 0.5 0.8 1.0 1.2 1.5 1.8 2.0 2.5 3.0}} gain_moment = 2  nSamples = 10000 ntrials=100 state_sampling_cycles = { { 1  3  }  { 10  4 } } gen_sampling_cycles = { { 10  4  }  } ana_sampling_cycles = { { 50  3  }  {200  4 }  { 500  5 } { 1000 6} } )

//evidence_works = evidence_prob (id_file="evidence_prob_02_" singleLigandExperiment = mySimulation  State_Model = Model_1   model_parameters_distribution = paramPrior_1   algorithm = "MacroDMR"  Binomial_threshold =5.0 Variance_threshold =1.0  p_jump = 0.5  min_probability = 1e-14  tolerance_error=1e-2 initseed = 3034446629 eps_G = 1e-4 eps_factor =10  betas = { 1.0 0.3 0.1 3e-2 1e-2 3e-3 0}   landas = {0 1 2 5 10 20 50 100 200 500 1000 2000 5000 1e4 2e4 5e4 } target_probability = 0.2 nSamples = 10000 ntrials=100 state_sampling_cycles = { { 1  3  }  { 10  4 } } gen_sampling_cycles = { { 10  4  }  } ana_sampling_cycles = { { 50  3  }  {200  4 }  { 500  5 } { 1000 6} } )

//evidence_works = evidence_derivative (id_file="derivative_param" singleLigandExperiment = mySimulation  State_Model = Model_1   model_parameters_distribution = paramPrior_1   algorithm = "MacroDMR"  Binomial_threshold =5.0 Variance_threshold =1.0  n_trials=100 p_jump = 0.5  min_probability = 1e-14 tolerance_error=1e-2 initseed = 3034446629   betas = { 1.0 0.3 0.1 3e-2 1e-2 3e-3 0}  landas = {0 1 2 5 10 20 50 100 200 500 1000 2000 5000 1e4 2e4 5e4 1e5 2e5 5e5 1e6 2e6 5e6 1e7} landa_50_hill = {{ 1 2 5 10 20 50 100 200 500 1000 2000 5000 1e4 2e4 5e4 1e5 2e5 5e5 1e6 2e6 5e6 } { 0.2 0.5 0.8 1.0 1.2 1.5 1.8 2.0 2.5 3.0}} gain_moment = 2 nSamples = 10000  state_sampling_cycles = { { 1  3  }  { 10  4 } } gen_sampling_cycles = { { 10  4  }  } ana_sampling_cycles = { { 50  3  }  {200  4 }  { 500  5 } { 1000 6} } )


//evidence_works = evidence_emcee ( singleLigandExperiment = mySimulation  State_Model = Model_1   model_parameters_distribution = paramPrior_1   algorithm = "MacroDMR"  Binomial_threshold =5.0 Variance_threshold =1.0  p_jump = 1.0   min_probability = 1e-14 tolerance_error=1e-2 initseed = 3034446629   betas = { 1.0 0.3 0.1 3e-2 1e-2 3e-3 0}  alfas = {2 1.5 1.2 1.1 1.05 1.02 1.01 1.005  1.002  1.001 1.0005  1.0002 1.0001 }  nSamples = 10000  parameters_output = 0  gradient_output = 0  numWalkers = 8  target_prob = 0.2  n_trials_at_init = 100 )


//evidence_works = evidence_emcee (id_file="emcee_02all"  singleLigandExperiment = mySimulation  State_Model = Model_1   model_parameters_distribution = paramPrior_1   algorithm = "MacroDMR"  Binomial_threshold =5.0 Variance_threshold =1.0  p_jump = 1.0   min_probability = 1e-14 tolerance_error=1e-2 initseed = 3034446629   betas = { 1.0 0.3 0.1 3e-2 1e-2 3e-3 0}  alfas = {2 1.5 1.2 1.1 1.05 1.02 1.01 1.005  1.002  1.001 1.0005  1.0002 1.0001 }  nSamples = 10000  parameters_output = 0  gradient_output = 0  numWalkers = 16  target_prob = 0.2  n_trials_at_init = 1000 )


//evidence_works = evidence_derivative (id_file="derivative_prob_0" singleLigandExperiment = mySimulation  State_Model = Model_1   model_parameters_distribution = paramPrior_1   algorithm = "MacroDMR"  Binomial_threshold =5.0 Variance_threshold =1.0  n_trials=100 p_jump = 0.5  min_probability = 1e-14 tolerance_error=1e-2 initseed = 3034446629   betas = { 1.0 0.3 0.1 3e-2 1e-2 3e-3 0}  landas = {0 1 2 5 10 20 50 100 200 500 1000 2000 5000 1e4 2e4 5e4 } target_probability = 0 nSamples = 10000  parameters_output = 0  gradient_output = 0)

//evidence_works = evidence_derivative (id_file="derivative_prob_02" singleLigandExperiment = mySimulation  State_Model = Model_1   model_parameters_distribution = paramPrior_1   algorithm = "MacroDMR"  Binomial_threshold =5.0 Variance_threshold =1.0  n_trials=100 p_jump = 0.5  min_probability = 1e-14 tolerance_error=1e-2 initseed = 3034446629   betas = { 1.0 0.3 0.1 3e-2 1e-2 3e-3 0}  landas = {0 1 2 5 10 20 50 100 200 500 1000 2000 5000 1e4 2e4 5e4 } target_probability = 0.2 nSamples = 10000  parameters_output = 0  gradient_output = 0)
//evidence_works = evidence ( singleLigandExperiment = mySimulation  State_Model = Model_1   model_parameters_distribution = paramPrior_1   algorithm = "MacroDMR"  Binomial_threshold =5.0 Variance_threshold =1.0  p_jump = 0.5  eps_G = 1e-4 eps_factor =10 min_probability = 1e-14 tolerance_error=1e-2 initseed = 3034446629   betas = { 1.0 0.3 0.1 3e-2 1e-2 3e-3 0}  landas = {0 1 2 5 10 20 50 100 200 500 1000 2000 5000 1e4 2e4 5e4 1e5 2e5 5e5 1e6 2e6 5e6 1e7} landa_50_hill = {{ 1 2 5 10 20 50 100 200 500 1000 2000 5000 1e4 2e4 5e4 1e5 2e5 5e5 1e6 2e6 5e6 } { 0.2 0.5 0.8 1.0 1.2 1.5 1.8 2.0 2.5 3.0}} gain_moment = 2 nSamples = 10000  parameters_output = 0  gradient_output = 0)

